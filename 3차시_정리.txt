PR
----
작업내역을 프로젝트에 반영하는 것이 아니라 충분히 리뷰받고 최종적으로 프로젝트에 반영하는 단계입니다.<br>
- 1. 누가 이 작업 할 것인지 정한다. - Issue<br>
- 2. 각자 맡은 것을 작업한다. - Branch<br>
- 3. 각자 작업을 프로젝트에 합친다. - merge<br>
(경우에 따라). 작업한 내용을 리뷰하고 최종적으로 프로젝트에 반영한다. - PR 후 merge<br><br>

PR(Pull Request, 풀리퀘스트) 는 내 작업내역을 바로 merge 하지 않고, 참여하고 있는 프로젝트에 내 작업(branch)를 merge해달라고 <br>
요청(Request) 를 먼저 보내는 것입니다. <br><br>

Commit 관리하기
------- 
다른 사람들과 같이 협업하고 있다면 어떤 내용이 되돌려졌는지 기록으로 남기는 것도 중요합니다. <br>
어떤 내용을 되돌렸는지 새로운 commit을 남기는 것을 revert(리버트) 라고 합니다. <br>
최신 commit 뿐만 아니라 이전에 했던 commit 도 revert 로 되돌릴 수 있답니다! <br><br>

작업하다가 commit 메시지에 오타가 났거나 파일을 까먹고 add(staging)하는 경우가 있겠죠? <br>
- 최신의 commit을 수정하는 것을 amend(어맨드,고치기) 라고 합니다! <br>
  amend 로는 가장 최신의 commit 만 고칠 수 있다는 것을 꼭 기억하세요!<br>
- reset (리셋)은 commit 했던 작업내역을 말 그대로 리셋시키는 것입니다.   <br>
  '기억이 리셋되었다' 가 '기억이 없다'는 말인 것처럼요. 과거로 돌아가서 새로운 삶을 사는 것처럼 reset 이후에 작업내역은 없어진 commit 기록과 관계없습니다. <br>
- stash(스태시) 는 프로젝트의 변경사항을 임시적으로 보관해둘 때 사용합니다. <br>
  예를 들면, 다른 branch 로 체크아웃 하는 경우 현재 branch 의 변경사항이 사라지게 됩니다. <br>
  아직 작업 중이라서 commit 하지 않고 변경사항만 보관해두고 싶을 수 있겠죠? 이 때 commit 대신 stash 를 사용합니다. <br><br>

의사소통편
--------
commit 메세지 작성하는 규칙은 commit 메시지 컨벤션(commit message convention)!  <br>
(프로그래밍 세계에서 서로 조직(특정 기술을 사용하는 사람들, 회사 등)에서 합의한 규칙을 convention (컨벤션) 이라고 부릅니다. )<br>
보통 코드리뷰는 아래의 단계에서 많이 일어납니다. 앞서 PR 수업 들었을 때 기억나시나요? <br>
주로 PR 한 내역에서 댓글을 달면서  리뷰를 남기는 방식을 많이 사용한다고 했습니다. <br><br>

- 코드리뷰를 하는 이유! <br>
  * 코드의 품질을 높일 수 있다!<br>
  * 다른 사람의 눈으로 버그를 빠르게 발견할 수 있다!<br>
  * 서로의 지식을 나누면서, 더 나은 방법을 찾아낼 수 있습니다. <br><br>

Github 프로젝트에서도 README.md 를 만들어 프로젝트 소개글을 적어둡니다. <br>
프로젝트의 어마어마하게 많은 파일들을 하나하나씩 다 읽어볼 수는 없으니 꼭 이런 소개 파일이 있는게 좋겠죠! <br>

Github 에서 정보 얻고 나누기
--------
오픈소스(Open source)란 누구나 프로젝트를 사용하고, 수정하고, 배포할 수 있는 프로젝트를 의미했어요. <br>
라이센스를 꼭 지켜줍시다! 많은 사람들이 프로젝트에 컨트리뷰션(contribution, 기여) 하면서 발전시켜나가는 것.<br>
Python, Go, Javascript, Spring, React, Django, Spark, Hadoop 등등 널리 쓰이는 많은 프로그래밍 언어와 기술들이 모두 오픈소스랍니다<br>
가장 좋은 것은 내가 일상생활에서 쓸 수 있는 리포지토리를 만드는 것이에요! <br><br>

아까 같이 만들었던 Github pages 를 발전시켜서 개발 블로그로 만들 수도 있고, <br>
TIL repo 에 매일매일 알게 된 내용들을 commit 하고 push!
